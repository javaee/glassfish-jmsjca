<?xml version="1.0"?>
<project default="compile" basedir="." name="jmsjca">
    <description>
    </description>

<!--
  Conventions:
  xx.dir = directory
  xx.filepath = absolute filename
  xx.filename = filename only

  This is the build file for stcms. It's targets will be called from
  other build files. It is assumed that the following properties are
  set:
  - jcaid

-->
    <taskdef name="if" classname="net.sf.antcontrib.logic.IfTask" />
    <import file="../RTS/public-test.xml" />
    <import file="../RTS/public-build.xml" />

<!--===========================================================================
    Initializes variables etc
-->
    <target name="init" unless="init.ed">
        <property environment="env" />
        <property file="${stc.root.dir}/stc.properties" />
        <pathconvert property="stc.root.dir" targetOS="unix">
            <path>
                <pathelement path="${env.STC_ROOT}"/>
            </path>
        </pathconvert>
        <property file="${env.STC_ROOT}/stc.properties" />
        <property file="${stc.root.dir}/stc.properties" />

        <property file="build.properties" />
        <property file="${env.STC_ROOT}/RTS/build.properties" />
        <property file="build-${jcaid}.properties" />
        <property file="build-xxx.properties" />

        <!-- To compile NSK -->
        <path id="jmsjca.xxx.classpath">
            <fileset file="${jmsjca.core.jar.path}" />
            <fileset file="${stc.api.dir}/j2ee.jar" />
            <fileset file="${jcaid}/lib/nsjms.jar" />
        </path>

        <!-- To compile/run unit tests -->
        <path id="jmsjca.test.classpath">
            <path refid="container.classpath"/>
            <fileset file="core/lib/jdom.jar" />
            <pathelement location="${jmsjca.container.classes.dir}" />
        </path>

        <property name="init.ed" value="true" />
    </target>

<!--===========================================================================
    Clean
-->
    <target name="clean" depends="init">
        <echo message="deleting ${jmsjca.xxx.module.dir}" />
        <delete dir="${jmsjca.xxx.module.dir}" />
        <delete dir="${install.inclusions.dir}/all/is/lib/install/applications/ra${jcaid}" />
    </target>

<!--===========================================================================
    Creates the rar file
-->
    <target name="rar" depends="compile" unless="rar.ed">

        <property name="rar.ed" value="true" />
    </target>

<!--===========================================================================
    Creates the sar file
-->
    <target name="sar" depends="rar" unless="sar.ed">

        <property name="sar.ed" value="true" />
    </target>

<!--===========================================================================
    Compiles the source code and produces a jar file
-->
    <target
        name="compile"
        depends="init"
        description="Compiles the source base"
        unless="compile.ed"
    >
        <!-- compile -->
        <mkdir dir="${jmsjca.xxx.rar.classes.dir}"/>
        <javac
            fork="stc.jdk13.fork"
            destdir="${jmsjca.xxx.rar.classes.dir}"
            debug="true"
            deprecation="${stc.java.deprecation}"
            target="1.4"
            source="1.4"
        >
            <src path="${jcaid}/src/java" />
            <classpath refid="jmsjca.xxx.classpath"/>
        </javac>

        <!-- mk rar -->
        <jar destfile="${jmsjca.xxx.rar.jar.path}">
            <fileset dir="${jmsjca.xxx.rar.classes.dir}">
            </fileset>
        </jar>

        <zip destfile="${jmsjca.xxx.rar.rar.path}" >
            <fileset file="${jmsjca.xxx.rar.jar.path}" />
            <fileset file="${jmsjca.core.jar.path}" />
            <zipfileset prefix="META-INF" file="${jcaid}/src/meta/ra.xml" />
        </zip>

        <property name="compile.ed" value="true" />
    </target>

<!--===========================================================================
    DEV-ONLY: compile-test
-->
    <target
        name="compile-test"
        depends="init, compile"
        description=""
        unless="compile-test.ed"
    >
        <!-- TBD -->
        <property name="compile-test.ed" value="true" />
    </target>

<!--===========================================================================
    DEV-ONLY: run-test: executes the tests
-->
    <target
        name="run-test"
        depends="init, compile-test"
    >
        <!-- TBD -->
    </target>

<!--===========================================================================
    DEV-ONLY: install-jms-jars: jms provider client jars
-->
    <target
        name="install-jms-jars"
        depends="init"
        if="lh"
    >
        <!-- TBD -->
    </target>

    <target
        name="uninstall-jms-jars"
        depends="init"
        if="lh"
    >
        <!-- TBD -->    
    </target>

</project>
